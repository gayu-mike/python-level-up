
.. _Strings

Python 字符一般用 string 来操作，'' 和 "" 是一样的，不像 C
中的字符数组和字符。另外，遇到::
    "I say, \"hello\"."
    'I say, \'hello\'.'

这样的情况，两者其实都要 escape，但 ' 可一少按一个键，更方便。

.. _More on Defining Functions

有三种定义多个函数参数参数的方式，可以组合

.. _Default Argument Values

::
    def func(a, b=2):
        return a ** b

调用::
    func(2)
    >>> 2 ** 2
    func(2, 3)
    >>> 2 ** 3

*Warning:
默认参数只会初始化一次，如果用可变的参数作为初始值，会在每次调用的时候改变参数的值*

::
    def apnd(a, L=[]):
        return L.append(a)

::
    print(apnd(1))
    >> [1]
    print(apnd(1))
    >> [1, 1]
    print(apnd(1))
    >> [1, 1, 1]

如果想避免上述情况::
    def apnd(a, L=None):
        if L is None:
            L = []
        return L.append(a)

.. _Keayword Arguments

.. _Arbitrary Argument Lists

::
    def write_items(f, sep, *args):
        file.write(sep.join(args))

::
    write_items(f, '/', 'included', 'in', 'args')
    >> 'included/in/args'

其中，当参数使用 * 的时候，args 变量是一个 tuple，把余下的所有实参放在这个
tuple 中。

args 后面还可以定义参数，但必须是 Keyword Arguments::
    def write_items(f, *args, sep='/'):
        return sep.join(args)

::
    write_items(f, 'all', 'in', 'args')
    >> 'all/in/args'
    write_items(f, 'all', 'in', 'args', sep=',')
    >> 'all,in,args'